#START.perlbrew AAA
if [[ -z "$PERLBREW_HOME" ]]; then
    export PERLBREW_HOME=$HOME/.perlbrew
fi

if [[ -f $PERLBREW_HOME/init ]]; then
    . $PERLBREW_HOME/init
fi

__perlbrew_reinit () {
    if [[ ! -d $PERLBREW_HOME ]]; then
        mkdir -p $PERLBREW_HOME
    fi

    echo '# DO NOT EDIT THIS FILE' >| $PERLBREW_HOME/init
    command perlbrew env $1 >> $PERLBREW_HOME/init
    . $PERLBREW_HOME/init
    __perlbrew_set_path
}

__perlbrew_set_path () {
    [[ -z "$PERLBREW_ROOT" ]] && return 1
    [[ -n $(alias perl 2>/dev/null) ]] && unalias perl 2>/dev/null
    export PATH_WITHOUT_PERLBREW=$(perl -e 'print join ":", grep { index($_, $ENV{PERLBREW_ROOT}) } split/:/,$ENV{PATH};')
    export PATH=$PERLBREW_PATH:$PATH_WITHOUT_PERLBREW
}
__perlbrew_set_path

perlbrew () {
    local exit_status
    local short_option
    export SHELL

    if [[ `echo $1 | awk 'BEGIN{FS=""}{print $1}'` = '-' ]]; then
        short_option=$1
        shift
    else
        short_option=""
    fi

    case $1 in
        (use)
            if [[ -z "$2" ]] ; then
                if [[ -z "$PERLBREW_PERL" ]] ; then
                    echo "No version in use; defaulting to system"
                else
                    echo "Using $PERLBREW_PERL version"
                fi
            elif [[ -x "$PERLBREW_ROOT/perls/$2/bin/perl" || "$2" = "system" ]]; then
                eval $(command perlbrew $short_option env $2)
                __perlbrew_set_path
            elif [[ -x "$PERLBREW_ROOT/perls/perl-$2/bin/perl" ]]; then
                eval $(command perlbrew $short_option env "perl-$2")
                __perlbrew_set_path
            else
                echo "$2 is not installed" >&2
                exit_status=1
            fi
            ;;

        (switch)
              if [[ -n "$2" ]] ; then
                  if [[ -x "$PERLBREW_ROOT/perls/$2/bin/perl" ]]; then
                      perlbrew $short_option use $2
                      __perlbrew_reinit $2
                  elif [[ -x "$PERLBREW_ROOT/perls/perl-$2/bin/perl" ]]; then
                      perlbrew $short_option use "perl-$2"
                      __perlbrew_reinit "perl-$2"
                  else
                      echo "$2 is not installed" >&2
                      exit_status=1
                  fi
              else
                if [[ -z "$PERLBREW_PERL" ]] ; then
                    echo "No version in use; defaulting to system"
                else
                    echo "Using $PERLBREW_PERL version"
                fi
              fi
              ;;

        (off)
            unset PERLBREW_PERL
            command perlbrew $short_option off

            __perlbrew_reinit
            ;;

        (*)
            command perlbrew $short_option "$@"
            exit_status=$?
            ;;
    esac
    hash -r
    return ${exit_status:-0}
}
#END.perlbrew ZZZ
